Microsoft (R) Macro Assembler Version 6.11		    11/12/18 19:35:55
4.5.2.asm						     Page 1 - 1


 0000				CODE SEGMENT 'CODE'
				    ASSUME CS:CODE
 0000				START:  
 0000  33 D2			INPUT_SESS: XOR DX, DX   ; SERICA: CLEAR LEDS
 0002  CD 30			            INT 30H
 0004  B0 FF			            MOV AL, 0FFH     ; SET AL TO 1111 1111 B
 0006  32 E4			            XOR AH, AH      ; SET AH=0
 0008  CD 32			            INT 32H         ; ENABLE A[7:0]
 000A  BA 0000			            MOV DX, 0
 000D  B4 02			            MOV AH, 2
 000F  CD 32			            INT 32H
 0011  BA FFFF			            MOV DX, 0FFFFH  
 0014  B4 01			            MOV AH, 1       
 0016  CD 32			            INT 32H         ; SET A[3:0] TO FFFF
 0018  33 D2			            XOR DX, DX      ; THE RESULT WOULD BE SAVED TO DX(DL), AND IT IS INITIALIED INTO 00H
 001A  B1 04			            MOV CL, 4
 001C  32 E4			SAVE_RES:   XOR AH, AH
 001E  CD 33			            INT 33H         ; SAVE INPUT TO AL. THE REAL INPUT IS AL[3..0]
 0020  3C 10			            CMP AL, 10H     ; COMPARE AL WITH 0. IF CF=1, THEN INPUT IS INVALID
 0022  72 F8			            JC SAVE_RES
 0024  3C 1A			            CMP AL, 1AH     ; COMPARE AL WITH A. IF ZF=1, JUMP TO GUESS. ELSE IF CF = 0, INPUT IS INVALID.
 0026  74 0E			            JZ GUESS_SESS
 0028  73 F2			            JNC SAVE_RES
 002A  D2 E2			            SHL DL, CL      ; ROTATE CH TO ITS LEFT BY FOUR BITS
 002C  24 0F			            AND AL, 0FH     ; DELETE A[4]
 002E  0A D0			            OR DL, AL       ; SAVE THE NEWLY INPUT DIGIT TO DL
 0030  B4 02			            MOV AH, 2
 0032  CD 32			            INT 32H         ; SHOW THE NEWLY INPUT DIGIT.
 0034  EB E6			            JMP SAVE_RES

 0036  8B DA			GUESS_SESS: MOV BX, DX      ; REMOVE THE RESULT FROM REGISTER DX TO REGISTER BX(BL)
 0038  81 E3 00FF		            AND BX, 0FFH     ; SERICA: ONLY A5~A4 IS VALID INPUT
 003C  BA FFFF			            MOV DX, 0FFFFH  ; SET A[7:4] TO FFFF
 003F  B4 02			            MOV AH, 2
 0041  CD 32			            INT 32H         ; HIDE THE TRUE RESULT AND SHOW FFFF INSTEAD ON A[7:4]
				        

				; DOES ANY MORE OPERATION NEED OT BE INSERTED?
				; CAN WE USE SI TO SAVE THE NUMBER OF TRIALS?
 0043  33 F6			            XOR SI, SI      ; SI STORES NUM TRAILED, INIT ONCE
				            
 0045  B9 0002			G_INPUT_S:  MOV CX, 2
 0048  33 D2			            XOR DX, DX
 004A				G_INPUT:    
 004A  32 E4			            XOR AH, AH
 004C  CD 33			            INT 33H         ; READ FROM KEYBOARD, STORE IN AL
 004E  3C 10			            CMP AL, 10H     ; COMPARE AL WITH 0. IF CF=1, THEN INPUT IS INVALID AND WE DO NOT SHOW IT
 0050  72 F8			            JC G_INPUT
 0052  3C 1A			            CMP AL, 1AH     ; COMPARE AL WITH A. IF CF=0, INPUT IS INVALID AND WE DO NOT SHOW IT
 0054  74 37			            JZ SHOW_RES
 0056  73 F2			            JNC G_INPUT
 0058  24 0F			            AND AL, 0FH     ; IF INPUT IS VALID, THEN
 005A  51			            PUSH CX
 005B  B1 04			            MOV CL, 4
				          
 005D  D2 E2			            SHL DL, CL
 005F  59			            POP CX
 0060  0A D0			            OR DL, AL       ; SAVE DIGIT
 0062  E2 E6			            LOOP G_INPUT
 0064  46			            INC SI
 0065  52			            PUSH DX
 0066  8B D6			            MOV DX, SI
 0068  B4 01			            MOV AH, 1
 006A  CD 32			            INT 32H         ; SET A[3:0] TO THE NUMBER OF TRIALS TAKEN
 006C  5A			            POP DX
				            
 006D  38 DA			            CMP DL, BL 
 006F  74 0B			            JZ G_EQ         ; IF GUESS EQUALS TO THE TRUE RESULT
 0071  77 11			            JA G_GT         ; IF GUESS IS LESS THAN THE TRUE RESULT
 0073  BA 0080			G_LT:       MOV DX, 80H     ; GLED7=1
 0076  32 E4			            XOR AH, AH
 0078  CD 30			            INT 30H
 007A  EB C9			            JMP G_INPUT_S
 007C  32 E4			G_EQ:       XOR AH, AH
 007E  33 D2			            XOR DX, DX      ; ALL LIGHTS ARE OFF
 0080  CD 30			            INT 30H
 0082  EB 13			            JMP NEXT_SESS
 0084  32 E4			G_GT:       XOR AH, AH      
 0086  BA 8000			            MOV DX, 8000H   ; YLED7=1
 0089  CD 30			            INT 30H
 008B  EB B8			            JMP G_INPUT_S
 008D  33 D2			SHOW_RES:   XOR DX, DX   ; SERICA: CLEAR LEDS
 008F  CD 30			            INT 30H
 0091  8B D3			            MOV DX, BX      ; SHOW THE TRUE RESULT IMMEDIATELLY AFTER PRESSING 'A'
 0093  B4 02			            MOV AH, 2
 0095  CD 32			            INT 32H         
				            ; SERICA: NOT NECESSARY
				            ; JMP NEXT_SESS   ; AND PRESS ANY BUTTON TO ENTER INPUT_SESS AGAIN
 0097  32 E4			NEXT_SESS:  XOR AH, AH      ; ENTER A DIGIT 0~A AND ENTER THE NEXT INPUT SESSION
 0099  CD 33			            INT 33H         ; ATTAIN THE RESULT AND SAVE TO AL
 009B  3C 10			            CMP AL, 10H
 009D  72 F8			            JC NEXT_SESS
 009F  3C 1B			            CMP AL, 1BH
 00A1  73 F4			            JNC NEXT_SESS
 00A3  E9 FF5A			            JMP INPUT_SESS

 00A6				CODE ENDS
				    END START




Microsoft (R) Macro Assembler Version 6.11		    11/12/18 19:35:55
4.5.2.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CODE . . . . . . . . . . . . . .	16 Bit	 00A6	  Para	  Private 'CODE'	


Symbols:

                N a m e                 Type     Value    Attr

GUESS_SESS . . . . . . . . . . .	L Near	 0036	  CODE	
G_EQ . . . . . . . . . . . . . .	L Near	 007C	  CODE	
G_GT . . . . . . . . . . . . . .	L Near	 0084	  CODE	
G_INPUT_S  . . . . . . . . . . .	L Near	 0045	  CODE	
G_INPUT  . . . . . . . . . . . .	L Near	 004A	  CODE	
G_LT . . . . . . . . . . . . . .	L Near	 0073	  CODE	
INPUT_SESS . . . . . . . . . . .	L Near	 0000	  CODE	
NEXT_SESS  . . . . . . . . . . .	L Near	 0097	  CODE	
SAVE_RES . . . . . . . . . . . .	L Near	 001C	  CODE	
SHOW_RES . . . . . . . . . . . .	L Near	 008D	  CODE	
START  . . . . . . . . . . . . .	L Near	 0000	  CODE	

	   0 Warnings
	   0 Errors
