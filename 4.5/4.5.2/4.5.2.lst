Microsoft (R) Macro Assembler Version 6.11		    11/02/18 21:30:36
4.5.2.asm						     Page 1 - 1


 0000				CODE SEGMENT 'CODE'
				    ASSUME CS:CODE
 0000				START:  
 0000  B0 FF			INPUT_SESS: MOV AL, 0FFH     ; SET AL TO 1111 1111 B
 0002  32 E4			            XOR AH, AH      ; SET AH=0
 0004  CD 32			            INT 32H         ; ENABLE A[7:0]
 0006  BA 0000			            MOV DX, 0
 0009  B4 02			            MOV AH, 2
 000B  CD 32			            INT 32H
 000D  BA FFFF			            MOV DX, 0FFFFH  
 0010  B4 01			            MOV AH, 1       
 0012  CD 32			            INT 32H         ; SET A[3:0] TO FFFF
 0014  33 D2			            XOR DX, DX      ; THE RESULT WOULD BE SAVED TO DX(DL), AND IT IS INITIALIED INTO 00H
 0016  B1 04			            MOV CL, 4
 0018  32 E4			SAVE_RES:   XOR AH, AH
 001A  CD 33			            INT 33H         ; SAVE INPUT TO AL. THE REAL INPUT IS AL[3..0]
 001C  3C 10			            CMP AL, 10H     ; COMPARE AL WITH 0. IF CF=1, THEN INPUT IS INVALID
 001E  72 F8			            JC SAVE_RES
 0020  3C 1A			            CMP AL, 1AH     ; COMPARE AL WITH A. IF ZF=1, JUMP TO GUESS. ELSE IF CF = 0, INPUT IS INVALID.
 0022  74 0E			            JZ GUESS_SESS
 0024  73 F2			            JNC SAVE_RES
 0026  D2 E2			            SHL DL, CL      ; ROTATE CH TO ITS LEFT BY FOUR BITS
 0028  24 0F			            AND AL, 0FH     ; DELETE A[4]
 002A  0A D0			            OR DL, AL       ; SAVE THE NEWLY INPUT DIGIT TO DL
 002C  B4 02			            MOV AH, 2
 002E  CD 32			            INT 32H         ; SHOW THE NEWLY INPUT DIGIT.
 0030  EB E6			            JMP SAVE_RES

 0032  8B DA			GUESS_SESS: MOV BX, DX      ; REMOVE THE RESULT FROM REGISTER DX TO REGISTER BX(BL)
				            ;AND BX, 0FFH     ; SERICA: ONLY A5~A4 IS VALID INPUT
 0034  BA FFFF			            MOV DX, 0FFFFH  ; SET A[7:4] TO FFFF
 0037  B4 02			            MOV AH, 2
 0039  CD 32			            INT 32H         ; HIDE THE TRUE RESULT AND SHOW FFFF INSTEAD ON A[7:4]

				; DOES ANY MORE OPERATION NEED OT BE INSERTED?
				; CAN WE USE SI TO SAVE THE NUMBER OF TRIALS?
 003B  33 F6			            XOR SI, SI
 003D  8B D6			            MOV DX, SI
 003F  B4 01			            MOV AH, 1
 0041  CD 32			            INT 32H         ; SET A[3:0] TO THE NUMBER OF TRIALS TAKEN
 0043				G_INPUT_S:
 0043  B9 0002			        MOV CX, 2       
 0046				G_INPUT:    
 0046  33 D2			            XOR DX, DX
 0048  32 E4			            XOR AH, AH
 004A  CD 33			            INT 33H         ; READ FROM KEYBOARD, STORE IN AL
 004C  3C 10			            CMP AL, 10H     ; COMPARE AL WITH 0. IF CF=1, THEN INPUT IS INVALID AND WE DO NOT SHOW IT
 004E  72 F6			            JC G_INPUT
 0050  3C 1A			            CMP AL, 1AH     ; COMPARE AL WITH A. IF CF=0, INPUT IS INVALID AND WE DO NOT SHOW IT
 0052  74 39			            JZ SHOW_RES
 0054  73 F0			            JNC G_INPUT
 0056  24 0F			            AND AL, 0FH     ; IF INPUT IS VALID, THEN
 0058  02 D2			            ADD DL, DL      ; SHIFT DX LEFT 4 BITS
 005A  02 D2			            ADD DL, DL
 005C  02 D2			            ADD DL, DL
 005E  02 D2			            ADD DL, DL
 0060  0A D0			            OR DL, AL       ; SAVE DIGIT
 0062  E2 E2			            LOOP G_INPUT
 0064  46			            INC SI
 0065  52			            PUSH DX
				            ; CMP DX, BX      ; SERICA: SHOULD COMPARE BL WITH DL
 0066  8B D6			            MOV DX, SI
 0068  B4 01			            MOV AH, 1
 006A  CD 32			            INT 32H         ; SET A[3:0] TO THE NUMBER OF TRIALS TAKEN
 006C  5A			            POP DX
 006D  3B D3			            CMP DX, BX 
 006F  74 0B			            JZ G_EQ         ; IF GUESS EQUALS TO THE TRUE RESULT
 0071  72 11			            JC G_LT         ; IF GUESS IS LESS THAN THE TRUE RESULT
 0073  32 E4			G_GT:       XOR AH, AH      
 0075  BA 8000			            MOV DX, 8000H   ; YLED7=1
 0078  CD 30			            INT 30H
 007A  EB C7			            JMP G_INPUT_S
 007C  32 E4			G_EQ:       XOR AH, AH
 007E  33 D2			            XOR DX, DX      ; ALL LIGHTS ARE OFF
 0080  CD 30			            INT 30H
 0082  EB 0F			            JMP NEXT_SESS
 0084  BA 0080			G_LT:       MOV DX, 80H     ; GLED7=1
 0087  32 E4			            XOR AH, AH
 0089  CD 30			            INT 30H
 008B  EB B6			            JMP G_INPUT_S
 008D  8B D3			SHOW_RES:   MOV DX, BX      ; SHOW THE TRUE RESULT IMMEDIATELLY AFTER PRESSING 'A'
 008F  B4 02			            MOV AH, 2
 0091  CD 32			            INT 32H         
				            ; SERICA: NOT NECESSARY
				            ; JMP NEXT_SESS   ; AND PRESS ANY BUTTON TO ENTER INPUT_SESS AGAIN
 0093  32 E4			NEXT_SESS:  XOR AH, AH      ; ENTER A DIGIT 0~A AND ENTER THE NEXT INPUT SESSION
 0095  CD 33			            INT 33H         ; ATTAIN THE RESULT AND SAVE TO AL
 0097  3C 10			            CMP AL, 10H
 0099  72 F8			            JC NEXT_SESS
 009B  3C 1B			            CMP AL, 1BH
 009D  73 F4			            JNC NEXT_SESS
 009F  E9 FF5E			            JMP INPUT_SESS

 00A2				CODE ENDS
				    END START




Microsoft (R) Macro Assembler Version 6.11		    11/02/18 21:30:36
4.5.2.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CODE . . . . . . . . . . . . . .	16 Bit	 00A2	  Para	  Private 'CODE'	


Symbols:

                N a m e                 Type     Value    Attr

GUESS_SESS . . . . . . . . . . .	L Near	 0032	  CODE	
G_EQ . . . . . . . . . . . . . .	L Near	 007C	  CODE	
G_GT . . . . . . . . . . . . . .	L Near	 0073	  CODE	
G_INPUT_S  . . . . . . . . . . .	L Near	 0043	  CODE	
G_INPUT  . . . . . . . . . . . .	L Near	 0046	  CODE	
G_LT . . . . . . . . . . . . . .	L Near	 0084	  CODE	
INPUT_SESS . . . . . . . . . . .	L Near	 0000	  CODE	
NEXT_SESS  . . . . . . . . . . .	L Near	 0093	  CODE	
SAVE_RES . . . . . . . . . . . .	L Near	 0018	  CODE	
SHOW_RES . . . . . . . . . . . .	L Near	 008D	  CODE	
START  . . . . . . . . . . . . .	L Near	 0000	  CODE	

	   0 Warnings
	   0 Errors
