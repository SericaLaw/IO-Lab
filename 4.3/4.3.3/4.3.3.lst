Microsoft (R) Macro Assembler Version 6.11		    11/02/18 13:10:36
4.3.3.asm						     Page 1 - 1


 0000				DATA SEGMENT 'DATA'
 0000 000A			    DIVIDER DW 10
 0002				DATA ENDS


 0000				CODE SEGMENT 'CODE'
				    ASSUME CS:CODE, DS:DATA
 0000  B8 0080			START:      MOV AX, 0080H
 0003  8E D8			            MOV DS, AX
 0005  33 C0			            XOR AX, AX
 0007  B0 0F			            MOV AL,0FH      ; Serica: 设置数码管d3~d0允许显示
 0009  CD 32			            INT 32H         ; Serica: 设置数码管d3~d0允许显示
 000B  32 C0			            XOR AL,AL       ; Serica: AL清零
 000D  CD 31			            INT 31H         ; SAVE (A,B)->(DH,DL)
 000F  32 E4			INPUT:      XOR AH, AH
 0011  CD 33			            INT 33H         ; READ THE CURRENT INPUT AND SAVE TO AL
				            ;TEST AL, 10H    ; IF AL[4]=0, THERE IS NO INPUT, AND WE WAIT FOR AN INPUT AGAIN
				            ;JZ INPUT    
				            ;TEST AL, 0FFH   ; IF AL = 0, INPUT IS INVALID 
				            ;JZ EXCEPTION
				            ;CMP AL, 4       ; IF AL >=4, INPUT IS INVALID (CF=0)
				            ;JNC EXCEPTION
 0013  3C 13			            CMP AL, 10011B       ; IF AL==10011B, MULTIPLICATION  (CF=0,ZF=0)
 0015  74 26			            JZ MULTIPLICATION
 0017  3C 12			            CMP AL, 10010B
 0019  74 16			            JZ SUBTRACTION
 001B  3C 11			            CMP AL, 10001B
 001D  74 02			            JZ ADDITION
 001F  EB DF			            JMP START ; Serica: 除了上面三种情况，其余输入都是非法的，直接返回START
 0021  8A CE			ADDITION:   MOV CL, DH ; STORE THE VALUE OF NUMBER A INTO CL
 0023  81 E2 00FF		            AND DX, 0FFH ; 
 0027  03 D1			            ADD DX, CX      ; SAVE THE RESULT TO DX STILL
 0029  81 FA 2710		            CMP DX, 10000   ; Serica: COMPARE THE RESULT WITH 10000
 002D  73 1B			            JNC EEE   ; CF=0, => (DX)>=10000(>9999) => DISPLAY E
 002F  EB 2B			            JMP OUTPUT
 0031  8A CE			SUBTRACTION:    MOV CL, DH
 0033  81 E2 00FF		                AND DX, 0FFH
 0037  2B D1			                SUB DX, CX
 0039  72 0F			                JC EEE
 003B  EB 1F			                JMP OUTPUT
 003D  8A C6			MULTIPLICATION: MOV AL, DH
				                ; AND DX, 0FFH Serica: not necessary
 003F  F6 E2			                MUL DL
 0041  3D 2710			                CMP AX, 10000   ; COMPARE AX AND 10000. IF AX > 9999(CF=0), JUMP TO EEE
 0044  73 04			                JNC EEE
 0046  8B D0			                MOV DX, AX
 0048  EB 12			                JMP OUTPUT
 004A  BA EEEE			EEE:        MOV DX, 0EEEEH
 004D  B4 01			            MOV AH, 1   ; Serica：是显示到数码管上orz
 004F  CD 32			            INT 32H     ; Serica：是显示到数码管上orz
 0051  EB AD			            JMP START
 0053  BA FFFF			EXCEPTION:  MOV DX, 0FFFFH
 0056  B4 00			            MOV AH, 0
 0058  CD 30			            INT 30H         ; PRINT FFFF, INDICATING AN END
 005A  EB B3			            JMP INPUT       ; JUMP TO INPUT AGAIN

 005C  8B C2			OUTPUT: MOV AX, DX           
 005E  B1 00			        MOV CL, 0           ; THE NUMER TO ROTATE
 0060  BB 0000			        MOV BX, 0           ; SET BX TO 0. THE FINAL ANS IS SAVED TO [BX]
 0063  B5 0A			        MOV CH, 10          ; CH SHOULD ONLY BE SET ONCE DURING THE LOOP. OTHERWISE IT'S A WASTE OF TIME
 0065  F6 F5			TRANS:  DIV CH              ; AX STORES THE RESULT WHILE DX STORES THE REMAINDERH. NOTE THAT THE RESULT HAS AT MOST 10
 0067  D3 E2			        SAL DX, CL          ; SHIFT DX TO THE LEFT 0/4/8/12BITS
 0069  0B DA			        OR  BX, DX          ; SAVE THE RESULT TO [BX]
 006B  80 C1 04			        ADD CL, 4           ; NEXT TIME, SHIFT 4BITS MORE
 006E  A9 FFFF			        TEST AX, 0FFFFH      ; TEST IF THERE ARE NO RESULTS
 0071  75 F2			        JNZ TRANS           ; IF THE RESULT IS 0, THEN LOOP ENDS
 0073  B4 01			        MOV AH, 1
 0075  8B D3			        MOV DX, BX
 0077  CD 32			        INT 32H
 0079  EB 85			        JMP START
 007B				CODE ENDS
				    END START
Microsoft (R) Macro Assembler Version 6.11		    11/02/18 13:10:36
4.3.3.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CODE . . . . . . . . . . . . . .	16 Bit	 007B	  Para	  Private 'CODE'	
DATA . . . . . . . . . . . . . .	16 Bit	 0002	  Para	  Private 'DATA'	


Symbols:

                N a m e                 Type     Value    Attr

ADDITION . . . . . . . . . . . .	L Near	 0021	  CODE	
DIVIDER  . . . . . . . . . . . .	Word	 0000	  DATA	
EEE  . . . . . . . . . . . . . .	L Near	 004A	  CODE	
EXCEPTION  . . . . . . . . . . .	L Near	 0053	  CODE	
INPUT  . . . . . . . . . . . . .	L Near	 000F	  CODE	
MULTIPLICATION . . . . . . . . .	L Near	 003D	  CODE	
OUTPUT . . . . . . . . . . . . .	L Near	 005C	  CODE	
START  . . . . . . . . . . . . .	L Near	 0000	  CODE	
SUBTRACTION  . . . . . . . . . .	L Near	 0031	  CODE	
TRANS  . . . . . . . . . . . . .	L Near	 0065	  CODE	

	   0 Warnings
	   0 Errors
