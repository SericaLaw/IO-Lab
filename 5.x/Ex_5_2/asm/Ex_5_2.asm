CODE SEGMENT 'CODE'
    ASSUME CS:CODE
START:
    ; INIT DISPLAY
    MOV AL, 0FFH
	OUT 24H, AL
INPUT_WMODE:
    ; IF SW16== 1, WRITE WORKING MODE
    IN AL, 12H  ; READ HIGHER 8 DIGITS (SW23~16) FROM SWITCH
    TEST AL, 01H
    JZ INPUT_WMODE  ; SW16 == 0
    ; S20~S18 = M2~M0 ; S17 = BCD
    SHR AL, 1 ; NOW AL = D7..D4 M2 M1 M0 BCD
    OR AL, 00110000B ; NOW AL = D7D6 RW1 RW0 M2..M0 BCD
    AND AL, 00111111B ; LET D7D6=00 TO SELECT T/C0
    OUT 46H, AL ; WIRTE WMODE
    
INPUT_INITIAL_VALUE:
    IN AL, 12H
    TEST AL, 00100000B  ; IF SW21 == 1, WRITE INITIAL VALUE
    JZ INPUT_INITIAL_VALUE  ; SW21 == 0
    IN AX, 10H  ; READ LOWER 16 DIGITS (SW15~SW0) FROM SWITCH
    OUT 40H, AL ; INIT COUNTER #0, LOWER BYTE FIRST
    MOV AL, AH
    OUT 40H, AL

R_BACK:
    IN AL, 12H
    TEST AL, 01000000B
    JZ READ_CUR_COUNT   ; SW22 == 0
; SW22 == 1
LOCK_STATE:
    MOV AL, 11100010B
    OUT 46H, AL
    IN AL, 40H  ; READ STATE
    XOR AH, AH
    OUT 20H, AX ; DISPLAY
    JMP R_BACK

READ_CUR_COUNT:
    MOV AL, 11010010B   ; READ CUR COUNT FROM COUNTER #0
    OUT 46H, AL
    IN AL, 40H  ; READ TWICE
    MOV BL, AL
    IN AL, 40H
    MOV BH, AL
    XCHG BX, AX
    OUT 20H, AX ; DISPLAY
    JMP R_BACK
JMP R_BACK

CODE ENDS
    END START
