CODE SEGMENT 'CODE'
    ASSUME CS:CODE
START:
    MOV AX, 0FFFFH
	OUT 24H, AX
INPUT_WMODE:
    ; IF SW[16]==1, WIRTE WORKING MODE
    IN AL, 12H  ; READ HIGHER 8 DIGITS FROM SWITCH
    TEST AL, 01H
    JZ INPUT_WMODE
    SHR AL, 1 ; NOW AL = D7..D4 M2 M1 M0 BCD
    OR AL, 00110000B ; NOW AL = D7D6 RW1 RW0 M2..M0 BCD
    AND AL, 00111111B ; D7D6=00
    OUT 46H, AL ; WIRTE WMODE
INPUT_INITIAL_VALUE:
    IN AL, 12H
    TEST AL, 00100000B  ; IF SW[20]==1, WIRTE INITIAL VALUE
    JZ INPUT_INITIAL_VALUE
    IN AX, 10H  ; READ LOWER 16 DIGITS FROM SWITCH
    OUT 40H, AL ; INIT COUNTER #0, LOWER BYTE FIRST
    OUT 40H, AH
R_BACK:
    IN AL, 12H
    TEST AL, 01000000B
    JZ LOCK_STATE

READ_CUR_COUNT:
    MOV AL, 11010010B   ; READ CUR COUNT FROM COUNTER #0
    OUT 46H, AL
    IN AL, 40H  ; READ TWICE
    OUT 20H, AL ; DISPLAY
    IN AL, 40H
    OUT 20H, AL
    JMP R_BACK

LOCK_STATE:
    MOV AL, 11010010B
    OUT 46H, AL
    IN AL, 40H  ; READ STATE
    OUT 20H, AL ; DISPLAY
    AND AL, 80H
    OUT 02H, AL ; DISPLAY OUT ON RLED7
    JMP R_BACK
CODE ENDS
    END START
